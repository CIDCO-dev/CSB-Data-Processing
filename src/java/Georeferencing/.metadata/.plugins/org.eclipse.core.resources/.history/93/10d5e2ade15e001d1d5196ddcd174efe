package ca.cidco.csb.utilities;

import org.apache.commons.math3.linear.ArrayRealVector;
import org.apache.commons.math3.linear.RealVector;

public class Geodesy {
	
	/**
	 * Transform ECEF geographic coordinates to cartesian
	 * 
	 * @param x Cartesian x coordinate
	 * @param y Cartesian y coordinate
	 * @param z Cartesian z coordinate
	 * @param lat The ECEF latitude
	 * @param lon The ECEF longitude
	 * @param h The ECEF ellipsoidal height
	 * @param a half of the ellipsoidal axe reference
	 * @param e ellipsoidal first eccentricity reference
	 */
	public RealVector LatLonH_2_ECEF(double lat, double lon, double h, double a, double e){
		
		
//		// Transformation of lon, lat, h to TRF
		double N = a/Math.sqrt( 1 - Math.pow(e*Math.sin(lat),2) );
//		System.out.println("N: "+N );

		double x = (N + h)*Math.cos(lat)*Math.cos(lon);
		double y = (N + h)*Math.cos(lat)*Math.sin(lon);
		double z = (N*(1-Math.pow(e,2)) + h)*Math.sin(lat);

		System.out.println("x: "+x +"	y: "+y+"	z: "+z);
		return new ArrayRealVector(new double[] { x, y, z });
		 
	}
	
//	
}
