package ca.cidco.csb.test;

import static org.junit.Assert.*;

import java.sql.Timestamp;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;

import ca.cidco.csb.surveydata.Position;
import ca.cidco.csb.surveyplatform.hydroblock.Hydroblock20;

public class Hydroblock20Test {
	Hydroblock20 hydro = new Hydroblock20();

	String dataPath = "/home/dominic/Bureau/georef/";
//	String ubxFile = "/home/dominic/Bureau/georef/2022.10.11_224413.ubx";
//	String imuFile = "/home/dominic/Bureau/georef/2022.10.11_223416_imu.txt"; 
//	String sonarFile = "/home/dominic/Bureau/georef/2022.10.11_223416_sonar.txt"; 
	
	String dataPath2 = "/home/dominic/Bureau/georef/test3/";

	@Test
	public void testRead1() throws Exception {
		
		assertTrue(hydro.getAttitudes().size() ==0);
		assertTrue(hydro.getPositions().size()==0);
		assertTrue(hydro.getDepths().size()==0);
		assertFalse(hydro.getGnss().isErsValid());
		assertFalse(hydro.getGnss().isWlrsValid());
		hydro.read(dataPath);
		assertTrue(hydro.getAttitudes().size() >0);
		assertTrue(hydro.getPositions().size()>0);
		System.out.println(hydro.getDepths().size());
		assertTrue(hydro.getDepths().size()>0);
		// must be valid for ERS // WLRS
		assertTrue(hydro.getGnss().isErsValid());
		assertTrue(hydro.getGnss().isWlrsValid());
	}
	
	@Test
	public void testRead2() throws Exception {
		
		assertTrue(hydro.getAttitudes().size() ==0);
		assertTrue(hydro.getPositions().size()==0);
		assertTrue(hydro.getDepths().size()==0);
		assertFalse(hydro.getGnss().isErsValid());
		assertFalse(hydro.getGnss().isWlrsValid());
		
		hydro.read(dataPath2);
		assertTrue(hydro.getAttitudes().size() >0);
		assertTrue(hydro.getDepths().size()>0);
		assertTrue(hydro.getPositions().size()>0);
		System.out.println(hydro.getDepths().size());
		// must be Invalid for ERS // WLRS
		assertFalse(hydro.getGnss().isErsValid());
		assertFalse(hydro.getGnss().isWlrsValid());
	}
	
	
	@Test
	public void testSetPositions() throws ParseException {
		
		int sizeBeforeAdd =hydro.getPositions().size();
		assertEquals(0, sizeBeforeAdd);
		
		ArrayList<Position> testPositions= new ArrayList<Position>();
		
		// Build a position
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.SSSSSS");
		String dateTime= "2022-10-10 20:44:28.0";
	    java.util.Date parsedDate = dateFormat.parse(dateTime);
	    Timestamp timestamp = new java.sql.Timestamp(parsedDate.getTime());
	    
	    Double longitude = -68.5146847666667;
	    Double latitude = 48.4788435500003; 
	    Double height = -2.3756;
	    Double sdLongitude = 1.1345;
	    Double sdLatitude = 1.4777;
	    Double sdHeight = 0.0048;
	    Long numberOfSatellites = (long) 12;
	    Double gdop = 1.1;
		
	    Position position= new Position( timestamp, latitude,longitude,  height,sdLatitude,sdLongitude,sdHeight,numberOfSatellites,gdop);
	    
	    // Test adding 10x position in testPositions
	    for (int i =0; i<10; i++) {
	    	testPositions.add(position);
	    }
	    // set positions with the new Array (10x same position)
	    hydro.setPositions(testPositions);
	    
	    assertEquals(10, hydro.getPositions().size());
	}

	//	@Test
//	public void testReadImu() throws Exception {
//		
//		assertTrue(hydro.getAttitudes().size() ==0);
//		assertTrue(hydro.getPositions().size()==0);
//		assertTrue(hydro.getDepths().size()==0);
//		assertFalse(hydro.getGnss().isErsValid());
//		assertFalse(hydro.getGnss().isWlrsValid());
//		
//		hydro(imuFile);
//		System.out.println(hydro.getAttitudes().size());
//		assertTrue(hydro.getAttitudes().size() >0);
//		
//		// Verify Only attitudes has change		
//		assertFalse(hydro.getPositions().size()>0);
//		assertFalse(hydro.getDepths().size()>0);
//		assertFalse(hydro.getGnss().isErsValid());
//		assertFalse(hydro.getGnss().isWlrsValid());
//	}
	
//	@Test
//	public void testReadSonar() throws Exception {
//		
//		assertTrue(hydro.getAttitudes().size() ==0);
//		assertTrue(hydro.getPositions().size()==0);
//		assertTrue(hydro.getDepths().size()==0);
//		assertFalse(hydro.getGnss().isErsValid());
//		assertFalse(hydro.getGnss().isWlrsValid());
//		
//		hydro.readSonar(sonarFile);
//		System.out.println(hydro.getDepths().size());
//		assertTrue(hydro.getDepths().size()>0);
//		
//		// Verify Only depths has change		
//		assertFalse(hydro.getAttitudes().size() >0);
//		assertFalse(hydro.getPositions().size()>0);
//		assertFalse(hydro.getGnss().isErsValid());
//		assertFalse(hydro.getGnss().isWlrsValid());
//	}

}
